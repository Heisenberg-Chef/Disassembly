; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	main
PUBLIC	__xmm@00000006000000040000000200000000
PUBLIC	__xmm@0000000e0000000c0000000a00000008
PUBLIC	__xmm@00000016000000140000001200000010
PUBLIC	__xmm@0000001e0000001c0000001a00000018
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN6
	DD	imagerel $LN6+85
	DD	imagerel $unwind$printf
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN25
	DD	imagerel $LN25+188
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT __xmm@0000001e0000001c0000001a00000018
CONST	SEGMENT
__xmm@0000001e0000001c0000001a00000018 DB 018H, 00H, 00H, 00H, 01aH, 00H, 00H
	DB	00H, 01cH, 00H, 00H, 00H, 01eH, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000016000000140000001200000010
CONST	SEGMENT
__xmm@00000016000000140000001200000010 DB 010H, 00H, 00H, 00H, 012H, 00H, 00H
	DB	00H, 014H, 00H, 00H, 00H, 016H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@0000000e0000000c0000000a00000008
CONST	SEGMENT
__xmm@0000000e0000000c0000000a00000008 DB 08H, 00H, 00H, 00H, 0aH, 00H, 00H
	DB	00H, 0cH, 00H, 00H, 00H, 0eH, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000006000000040000000200000000
CONST	SEGMENT
__xmm@00000006000000040000000200000000 DB 00H, 00H, 00H, 00H, 02H, 00H, 00H
	DB	00H, 04H, 00H, 00H, 00H, 06H, 00H, 00H, 00H
CONST	ENDS
_DATA	SEGMENT
$SG9015	DB	'a[%d]=%d', 0aH, 00H
_DATA	ENDS
xdata	SEGMENT
$unwind$main DD	041c19H
	DD	012340dH
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 041b01H
	DD	07017521bH
	DD	030156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
a$ = 32
__$ArrayPad$ = 112
main	PROC
; File C:\Users\82595\Desktop\Disassembly\array\main.c
; Line 4
$LN25:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 10
	movdqa	xmm0, XMMWORD PTR __xmm@00000006000000040000000200000000
	lea	rcx, QWORD PTR a$[rsp+64]
	movdqa	xmm1, XMMWORD PTR __xmm@0000000e0000000c0000000a00000008
	mov	eax, 32					; 00000020H
	movdqu	XMMWORD PTR a$[rsp], xmm0
	movdqa	xmm0, XMMWORD PTR __xmm@00000016000000140000001200000010
	movdqu	XMMWORD PTR a$[rsp+16], xmm1
	movdqa	xmm1, XMMWORD PTR __xmm@0000001e0000001c0000001a00000018
	movdqu	XMMWORD PTR a$[rsp+32], xmm0
	movdqu	XMMWORD PTR a$[rsp+48], xmm1
	npad	2
$LL13@main:
	mov	DWORD PTR [rcx], eax
	lea	rcx, QWORD PTR [rcx+4]
	add	eax, 2
	cmp	eax, 40					; 00000028H
	jl	SHORT $LL13@main
; Line 13
	xor	ebx, ebx
	lea	rdi, QWORD PTR a$[rsp]
	npad	11
$LL7@main:
; Line 15
	mov	r8d, DWORD PTR [rdi]
	lea	rcx, OFFSET FLAT:$SG9015
	mov	edx, ebx
	call	printf
	inc	ebx
	lea	rdi, QWORD PTR [rdi+4]
	cmp	ebx, 20
	jl	SHORT $LL7@main
; Line 17
	xor	eax, eax
; Line 18
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+144]
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT printf
_TEXT	SEGMENT
_Format$ = 80
printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; Line 954
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx
; Line 957
	lea	rsi, QWORD PTR _Format$[rsp+8]
; Line 958
	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	mov	rbx, rax
; Line 643
	call	__local_stdio_printf_options
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], rsi
	mov	r8, rdi
	mov	rdx, rbx
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vfprintf
; Line 961
	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
; Line 642
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbp, rcx
; Line 643
	call	__local_stdio_printf_options
	mov	r9, rdi
	mov	QWORD PTR [rsp+32], rbx
	mov	r8, rsi
	mov	rdx, rbp
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vfprintf
; Line 644
	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
; Line 88
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
